{
    "push_data": {
        "pushed_at": 1502273722,
        "images": [],
        "tag": "latest",
        "pusher": "mrsix"
    },
    "callback_url": "https://registry.hub.docker.com/u/mrsix/api/hook/2f4hg31ja432143c4d1ff2cib2aeca0e0/",
    "repository": {
        "status": "Active",
        "description": "自用API，基于nodejs，允许跨域访问。",
        "is_trusted": true,
        "full_description": "## 项目说明\n这是一个基于express的node后端API服务，当时只是想抓取字幕组网站的下载资源，以备以后通过nas的方式去自动下载关注的美剧。不过后来慢慢扩展了几个API\n\n字幕组网站资源抓取原理：\n- 首先发送登录请求到目标登录地址，登录成功后会获取到cookies\n- 携带cookies访问收藏页面，通过cheerio抓取相应的关注信息\n- 使用 es6 的 async 函数 并发执行抓取每一个关注的信息（如果当关注条目很多的时候，并行效率可能会比较低，之后考虑限制并行数量）\n\n豆瓣电影API\n- 只是做了一个简单的转发，并对返回的数据做了一个过滤，可以自定义过滤掉低于某个分数的电影\n\n系统状态API\n- 引入了node的 os 模块，获取一些基础的系统状态数据\n\ncnode社区和知乎日报API\n- 均为转发请求，目的是为了接解决跨域访问的问题\n- cnode社区API本身支持跨域，本例只做测试用\n\n## 特性：\n- 使用了es6 的 async 函数 处理异步数据\n- 集成node 8.0.0版本的docker 托管在云服务器方便访问\n- 使用cors模块解决跨域问题，可以通过白名单的方式去配置允许跨域的ip。\n\n## 在线访问地址\n使用docker容器构建，托管在了[daocloud.io](daocloud.io)的免费应用中\n\n- API地址：http://mrsix-api.daoapp.io\n- 访问示例：get `http://mrsix-api.daoapp.io/api/v1/zmz/hot24`  获取24小时下载热门数据\n\n\n## 遇到的问题\n关于请求库 axios 在以form-data的形式发送post请求登录的的时候，遇到了问题，就是登录不上“字幕组”网站。（类似的问题 在cnode的兄弟也遇到了，不过我就没人家厉害了[关于axios在node中的post使用](https://cnodejs.org/topic/57e17beac4ae8ff239776de5)）后来直接使用了 [superagent](http://visionmedia.github.io/superagent/)感觉用起来很舒畅\n\n-----\n\n以后增加的特性\n\n* [ ] 添加mongo数据库支持，通过对比检测当前更新了哪一集，并将更新的加入数据库\n* [ ] 添加其他资源抓取\n* [ ] 限制查询资源时的并发数量\n* [ ] 提供前端页面展示\n* [ ] 集成到docker中，通过Nginx处理端口转发\n\n\n## API说明\n\n----\n\n### 字幕组API\n#### GET /api/v1/zmz/hot24  获取24小时下载热门数据\n返回值示例\n```\n{\n  \"success\": true,\n  \"dsc\": \"热门列表\",\n  \"data\": [\n    {\n      \"title\": \"双峰\",\n      \"type\": \"美剧\",\n      \"url\": \"http://www.zimuzu.tv/resource/26514\"\n    },\n    {\n      \"title\": \"绝命律师\",\n      \"type\": \"美剧\",\n      \"url\": \"http://www.zimuzu.tv/resource/33190\"\n    },\n    ...\n  ]\n}\n```\n#### POST /api/v1/zmz/fav  获取关注列表\n接收 post 参数:\n- account String 字幕组账户用户名\n- password String 字幕组账户用户名\n\n返回值示例\n```\n{\n  \"success\": true,\n  \"dsc\": \"关注list\",\n  \"data\": [\n    {\n      \"title\": \"【美剧】《绝命律师》\",\n      \"url\": \"http://www.zimuzu.tv/resource/33190\",\n      \"id\": \"33190\"\n    },\n    ...\n  ]\n}\n```\n#### POST /api/v1/zmz/fav/detail  获取关注列表下载资源\n接收 post 参数:\n- account String 字幕组账户用户名\n- password String 字幕组账户用户名\n\n返回值示例\n```\n{\n  \"success\": true,\n  \"dsc\": \"关注资源下载列表\",\n  \"data\": [\n    {\n      \"success\": true\n      \"dsc\": \"美剧《绝命律师》第3季连载中资源下载列表\",\n      \"data\":[\n        {\n          \"source_type\": \"HR-HDTV\",\n          \"source_urls\": [\n            \"season\": \"1\",\n            \"episode\": \"1\",\n            \"title\": \"绝命律师.Better.Call.Saul.S01E01.中英字幕.BD-HR.AAC.1024x576.x264.mp4\",\n            \"load_arr\": [\n              ...\n            ]\n          ]\n        }\n      ]\n    },\n    ...\n  ]\n}\n```\n## 豆瓣电影-正在上映API\n\n#### GET /api/v1/movie/cur  获取正在上映的电影\n接收 get 参数:\n- star 所需过滤的分数一下的电影（总分10分，默认为8分）\n\n返回值示例\n[同豆瓣API](https://developers.douban.com/wiki/?title=movie_v2)\n\n## 系统状态API\n\n#### GET /api/v1/sys  获取当前系统状态\n返回值示例\n```\n{\n  \"success\": true,\n  \"dsc\": \"系统状态\",\n  \"data\": {\n    \"arch\": \"x64\",\n    \"cpu\": [\n      ...\n    ],\n    \"totalmem\": 8589934592,  # 内存总量\n    \"freemem\": 741810176,    # 剩余内存\n    \"free_rate\": \"8.64\",     # 内存剩余百分百\n    \"uptime\": 47792          # 正常运行时间（单位s）\n  }\n}\n```\n## cnode社区API代理\n\n代理[cnodejs社区](https://cnodejs.org/api)的API转发，只是用来测试用的，因为cnode的API本身是支持跨域的。\n使用详情请参考他提供的API参数和地址代理转发的API使用 /cnode/...为前缀进入代理路由\n\n#### GET /cnode/topics  主题首页\n接收 get 参数\n- page Number 页数\n- tab String 主题分类。目前有 ask share job good dev\n- limit Number 每一页的主题数量\n- mdrender String 当为 false 时，不渲染。默认为 true，渲染出现的所有 markdown 格式文本。\n\n## 知乎日报API代理\n首先感谢[izzyleung提供的API分析](https://github.com/izzyleung/ZhihuDailyPurify/wiki/%E7%9F%A5%E4%B9%8E%E6%97%A5%E6%8A%A5-API-%E5%88%86%E6%9E%90)\n使用详情请参考他提供的API参数和地址代理转发的API使用 /ribao/...为前缀进入代理路由\n\n#### GET /ribao/api/7/prefetch-launch-images/1080*1920  启动界面图像获取\n`prefetch-launch-images` 后为图像分辨率，接受任意的 number*number 格式， number 为任意非负整数，返回值均相同\n返回值示例\n```\n{\n  \"creatives\": [\n    {\n      \"url\": \"https://pic1.zhimg.com/v2-cf690e166adee2d77ebb3450d4ddc424.jpg\",\n      \"start_time\": 1496932908,\n      \"impression_tracks\": [\n        \"https://sugar.zhihu.com/track?ai=4704&ut=&tu=&vs=2&ts=1496932908&si=ec82667293bd47cc88261ab0653cf64f&lu=0&hn=ad-engine.ad-engine.05d757af&at=impression&pf=PC&az=11&sg=4d27dde3d4db55a399ed6ecfc333eedb\"\n      ],\n      \"type\": 0,\n      \"id\": \"4704\"\n    }\n  ]\n}\n```\n#### GET /ribao/api/4/news/latest  最新消息\n\n等……\n具体参考[izzyleung提供的API分析](https://github.com/izzyleung/ZhihuDailyPurify/wiki/%E7%9F%A5%E4%B9%8E%E6%97%A5%E6%8A%A5-API-%E5%88%86%E6%9E%90)中的使用方式以及参数含义。\n*ps: 关于图片防盗链的问题 可添加meta 标签 * `<meta name=\"referrer\" content=\"never\">`\n\n## 添加docker部分\n- 使用dockerHub的自动构建功能关联GitHub项目，每当有新代码push之后触发自动构建命令\n- daocloud.io 控制台使用手动更新发布的方式（不支持dockerhub的自动发布）\n\n",
        "repo_url": "https://hub.docker.com/r/mrsix/api",
        "owner": "mrsix",
        "is_official": false,
        "is_private": false,
        "name": "api",
        "namespace": "mrsix",
        "star_count": 0,
        "comment_count": 0,
        "date_created": 1496972337,
        "dockerfile": "FROM node:8.0.0\nMAINTAINER mrsix '582497915@qq.com'\n\nRUN mkdir -p /usr/src/app\n\nWORKDIR /usr/src/app\n\nCOPY . /usr/src/app\nRUN npm install && npm cache clean --force\n\nCMD [ \"npm\", \"start\" ]\n",
        "repo_name": "mrsix/api"
    }
}
